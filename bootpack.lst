     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_keyfifo
     7 00000000                                 	EXTERN	_fifo8_init
     8 00000000                                 	EXTERN	_mousefifo
     9 00000000                                 	EXTERN	_init_gdtidt
    10 00000000                                 	EXTERN	_init_pic
    11 00000000                                 	EXTERN	_io_sti
    12 00000000                                 	EXTERN	_init_palette
    13 00000000                                 	EXTERN	_init_screen8
    14 00000000                                 	EXTERN	_init_mouse_cursor8
    15 00000000                                 	EXTERN	_putblock8_8
    16 00000000                                 	EXTERN	_sprintf
    17 00000000                                 	EXTERN	_putfonts8_asc
    18 00000000                                 	EXTERN	_io_out8
    19 00000000                                 	EXTERN	_io_cli
    20 00000000                                 	EXTERN	_fifo8_status
    21 00000000                                 	EXTERN	_fifo8_get
    22 00000000                                 	EXTERN	_boxfill8
    23 00000000                                 	EXTERN	_io_stihlt
    24 00000000                                 	EXTERN	_io_in8
    25 00000000                                 [FILE "bootpack.c"]
    26                                          [SECTION .data]
    27 00000000                                 LC0:
    28 00000000 28 25 64 2C 20 25 64 29 00      	DB	"(%d, %d)",0x00
    29 00000009                                 LC1:
    30 00000009 25 30 32 58 00                  	DB	"%02X",0x00
    31                                          [SECTION .text]
    32 00000000                                 	GLOBAL	_HariMain
    33 00000000                                 _HariMain:
    34 00000000 55                              	PUSH	EBP
    35 00000001 89 E5                           	MOV	EBP,ESP
    36 00000003 57                              	PUSH	EDI
    37 00000004 56                              	PUSH	ESI
    38 00000005 53                              	PUSH	EBX
    39 00000006 8D 9D FFFFFEC4                  	LEA	EBX,DWORD [-316+EBP]
    40 0000000C 81 EC 000001D0                  	SUB	ESP,464
    41 00000012 E8 00000206                     	CALL	_init_keyboard
    42 00000017 E8 00000222                     	CALL	_enable_mouse
    43 0000001C 8D 85 FFFFFEA4                  	LEA	EAX,DWORD [-348+EBP]
    44 00000022 50                              	PUSH	EAX
    45 00000023 6A 20                           	PUSH	32
    46 00000025 68 [00000000]                   	PUSH	_keyfifo
    47 0000002A E8 [00000000]                   	CALL	_fifo8_init
    48 0000002F 8D 85 FFFFFE24                  	LEA	EAX,DWORD [-476+EBP]
    49 00000035 50                              	PUSH	EAX
    50 00000036 68 00000080                     	PUSH	128
    51 0000003B 68 [00000000]                   	PUSH	_mousefifo
    52 00000040 E8 [00000000]                   	CALL	_fifo8_init
    53 00000045 E8 [00000000]                   	CALL	_init_gdtidt
    54 0000004A E8 [00000000]                   	CALL	_init_pic
    55 0000004F E8 [00000000]                   	CALL	_io_sti
    56 00000054 E8 [00000000]                   	CALL	_init_palette
    57 00000059 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
    58 00000060 50                              	PUSH	EAX
    59 00000061 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    60 00000068 50                              	PUSH	EAX
    61 00000069 FF 35 00000FF8                  	PUSH	DWORD [4088]
    62 0000006F E8 [00000000]                   	CALL	_init_screen8
    63 00000074 83 C4 24                        	ADD	ESP,36
    64 00000077 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    65 0000007E B9 00000002                     	MOV	ECX,2
    66 00000083 8D 50 F0                        	LEA	EDX,DWORD [-16+EAX]
    67 00000086 89 D0                           	MOV	EAX,EDX
    68 00000088 99                              	CDQ
    69 00000089 F7 F9                           	IDIV	ECX
    70 0000008B 0F BF 15 00000FF6               	MOVSX	EDX,WORD [4086]
    71 00000092 83 EA 2C                        	SUB	EDX,44
    72 00000095 89 C7                           	MOV	EDI,EAX
    73 00000097 89 D0                           	MOV	EAX,EDX
    74 00000099 6A 0E                           	PUSH	14
    75 0000009B 99                              	CDQ
    76 0000009C F7 F9                           	IDIV	ECX
    77 0000009E 53                              	PUSH	EBX
    78 0000009F 89 C6                           	MOV	ESI,EAX
    79 000000A1 E8 [00000000]                   	CALL	_init_mouse_cursor8
    80 000000A6 6A 10                           	PUSH	16
    81 000000A8 53                              	PUSH	EBX
    82 000000A9 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
    83 000000AC 56                              	PUSH	ESI
    84 000000AD 57                              	PUSH	EDI
    85 000000AE 6A 10                           	PUSH	16
    86 000000B0 6A 10                           	PUSH	16
    87 000000B2 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    88 000000B9 50                              	PUSH	EAX
    89 000000BA FF 35 00000FF8                  	PUSH	DWORD [4088]
    90 000000C0 E8 [00000000]                   	CALL	_putblock8_8
    91 000000C5 83 C4 28                        	ADD	ESP,40
    92 000000C8 56                              	PUSH	ESI
    93 000000C9 57                              	PUSH	EDI
    94 000000CA 68 [00000000]                   	PUSH	LC0
    95 000000CF 53                              	PUSH	EBX
    96 000000D0 E8 [00000000]                   	CALL	_sprintf
    97 000000D5 53                              	PUSH	EBX
    98 000000D6 6A 07                           	PUSH	7
    99 000000D8 6A 00                           	PUSH	0
   100 000000DA 6A 00                           	PUSH	0
   101 000000DC 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   102 000000E3 50                              	PUSH	EAX
   103 000000E4 FF 35 00000FF8                  	PUSH	DWORD [4088]
   104 000000EA E8 [00000000]                   	CALL	_putfonts8_asc
   105 000000EF 83 C4 28                        	ADD	ESP,40
   106 000000F2 68 000000F9                     	PUSH	249
   107 000000F7 6A 21                           	PUSH	33
   108 000000F9 E8 [00000000]                   	CALL	_io_out8
   109 000000FE 68 000000EF                     	PUSH	239
   110 00000103 68 000000A1                     	PUSH	161
   111 00000108 E8 [00000000]                   	CALL	_io_out8
   112 0000010D 83 C4 10                        	ADD	ESP,16
   113 00000110                                 L2:
   114 00000110 E8 [00000000]                   	CALL	_io_cli
   115 00000115 68 [00000000]                   	PUSH	_keyfifo
   116 0000011A E8 [00000000]                   	CALL	_fifo8_status
   117 0000011F 68 [00000000]                   	PUSH	_mousefifo
   118 00000124 89 C3                           	MOV	EBX,EAX
   119 00000126 E8 [00000000]                   	CALL	_fifo8_status
   120 0000012B 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   121 0000012E 5B                              	POP	EBX
   122 0000012F 5E                              	POP	ESI
   123 00000130 85 C0                           	TEST	EAX,EAX
   124 00000132 0F 84 000000C9                  	JE	L11
   125 00000138 68 [00000000]                   	PUSH	_keyfifo
   126 0000013D E8 [00000000]                   	CALL	_fifo8_status
   127 00000142 59                              	POP	ECX
   128 00000143 85 C0                           	TEST	EAX,EAX
   129 00000145 75 71                           	JNE	L12
   130 00000147 68 [00000000]                   	PUSH	_mousefifo
   131 0000014C E8 [00000000]                   	CALL	_fifo8_status
   132 00000151 5A                              	POP	EDX
   133 00000152 85 C0                           	TEST	EAX,EAX
   134 00000154 74 BA                           	JE	L2
   135 00000156 68 [00000000]                   	PUSH	_mousefifo
   136 0000015B E8 [00000000]                   	CALL	_fifo8_get
   137 00000160 89 C3                           	MOV	EBX,EAX
   138 00000162 E8 [00000000]                   	CALL	_io_sti
   139 00000167 53                              	PUSH	EBX
   140 00000168 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   141 0000016B 68 [00000009]                   	PUSH	LC1
   142 00000170 53                              	PUSH	EBX
   143 00000171 E8 [00000000]                   	CALL	_sprintf
   144 00000176 6A 1F                           	PUSH	31
   145 00000178 6A 2F                           	PUSH	47
   146 0000017A 6A 10                           	PUSH	16
   147 0000017C 6A 20                           	PUSH	32
   148 0000017E 6A 0E                           	PUSH	14
   149 00000180 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   150 00000187 50                              	PUSH	EAX
   151 00000188 FF 35 00000FF8                  	PUSH	DWORD [4088]
   152 0000018E E8 [00000000]                   	CALL	_boxfill8
   153 00000193 83 C4 2C                        	ADD	ESP,44
   154 00000196 53                              	PUSH	EBX
   155 00000197 6A 07                           	PUSH	7
   156 00000199 6A 10                           	PUSH	16
   157 0000019B 6A 20                           	PUSH	32
   158 0000019D                                 L10:
   159 0000019D 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   160 000001A4 50                              	PUSH	EAX
   161 000001A5 FF 35 00000FF8                  	PUSH	DWORD [4088]
   162 000001AB E8 [00000000]                   	CALL	_putfonts8_asc
   163 000001B0 83 C4 18                        	ADD	ESP,24
   164 000001B3 E9 FFFFFF58                     	JMP	L2
   165 000001B8                                 L12:
   166 000001B8 68 [00000000]                   	PUSH	_keyfifo
   167 000001BD E8 [00000000]                   	CALL	_fifo8_get
   168 000001C2 89 C3                           	MOV	EBX,EAX
   169 000001C4 E8 [00000000]                   	CALL	_io_sti
   170 000001C9 53                              	PUSH	EBX
   171 000001CA 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   172 000001CD 68 [00000009]                   	PUSH	LC1
   173 000001D2 53                              	PUSH	EBX
   174 000001D3 E8 [00000000]                   	CALL	_sprintf
   175 000001D8 6A 1F                           	PUSH	31
   176 000001DA 6A 0F                           	PUSH	15
   177 000001DC 6A 10                           	PUSH	16
   178 000001DE 6A 00                           	PUSH	0
   179 000001E0 6A 0E                           	PUSH	14
   180 000001E2 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   181 000001E9 50                              	PUSH	EAX
   182 000001EA FF 35 00000FF8                  	PUSH	DWORD [4088]
   183 000001F0 E8 [00000000]                   	CALL	_boxfill8
   184 000001F5 83 C4 2C                        	ADD	ESP,44
   185 000001F8 53                              	PUSH	EBX
   186 000001F9 6A 07                           	PUSH	7
   187 000001FB 6A 10                           	PUSH	16
   188 000001FD 6A 00                           	PUSH	0
   189 000001FF EB 9C                           	JMP	L10
   190 00000201                                 L11:
   191 00000201 E8 [00000000]                   	CALL	_io_stihlt
   192 00000206 E9 FFFFFF05                     	JMP	L2
   193 0000020B                                 	GLOBAL	_wait_KBC_sendready
   194 0000020B                                 _wait_KBC_sendready:
   195 0000020B 55                              	PUSH	EBP
   196 0000020C 89 E5                           	MOV	EBP,ESP
   197 0000020E                                 L14:
   198 0000020E 6A 64                           	PUSH	100
   199 00000210 E8 [00000000]                   	CALL	_io_in8
   200 00000215 5A                              	POP	EDX
   201 00000216 83 E0 02                        	AND	EAX,2
   202 00000219 75 F3                           	JNE	L14
   203 0000021B C9                              	LEAVE
   204 0000021C C3                              	RET
   205 0000021D                                 	GLOBAL	_init_keyboard
   206 0000021D                                 _init_keyboard:
   207 0000021D 55                              	PUSH	EBP
   208 0000021E 89 E5                           	MOV	EBP,ESP
   209 00000220 E8 FFFFFFE6                     	CALL	_wait_KBC_sendready
   210 00000225 6A 60                           	PUSH	96
   211 00000227 6A 64                           	PUSH	100
   212 00000229 E8 [00000000]                   	CALL	_io_out8
   213 0000022E E8 FFFFFFD8                     	CALL	_wait_KBC_sendready
   214 00000233 6A 47                           	PUSH	71
   215 00000235 6A 60                           	PUSH	96
   216 00000237 E8 [00000000]                   	CALL	_io_out8
   217 0000023C C9                              	LEAVE
   218 0000023D C3                              	RET
   219 0000023E                                 	GLOBAL	_enable_mouse
   220 0000023E                                 _enable_mouse:
   221 0000023E 55                              	PUSH	EBP
   222 0000023F 89 E5                           	MOV	EBP,ESP
   223 00000241 E8 FFFFFFC5                     	CALL	_wait_KBC_sendready
   224 00000246 68 000000D4                     	PUSH	212
   225 0000024B 6A 64                           	PUSH	100
   226 0000024D E8 [00000000]                   	CALL	_io_out8
   227 00000252 E8 FFFFFFB4                     	CALL	_wait_KBC_sendready
   228 00000257 68 000000F4                     	PUSH	244
   229 0000025C 6A 60                           	PUSH	96
   230 0000025E E8 [00000000]                   	CALL	_io_out8
   231 00000263 C9                              	LEAVE
   232 00000264 C3                              	RET
